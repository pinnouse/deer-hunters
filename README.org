* Game
** How to submit
   You only need to submit your copy of =grid_player.py= and any new
   files that you created. You do *not* need to submit any of the helper
   classes that are provided to you. Your files should be at the root of
   the zip. You can achieve this by running the following command wherever
   your code is:

   #+BEGIN_SRC bash
     zip submission.zip grid_player.py
   #+END_SRC

   To verify that you've zipped correctly you can either =vim submission.zip=
   and ensure that there is no folder only files or simply unzip your submission
   and confirm that no folders are created.

** Local Testing - Automated
   Enclosed is a =run.sh= file. This script automatically will run the server
   as well as both of the clients inside =tmux= (you need =tmux= installed for
   the script to work). You can run the script by typing =./run.sh 8888=. You 
   may need to change the port number if you're running the script frequently.

   The script will open =tmux= launch the server, then make a new tab and launch
   your client twice. You can navigate between the tabs by pressing =C-b n= (control b then n).

** Local Testing - Manual
   Alternatively you can launch the server and two clients manually in 3 seprate terminals
   by running =./server_runner.py 8888= and =./client_runner.py 8888= respectively.


** Windows Users
	The run.sh will not work as Windows is not supported by default, 
	although if running manually, you can use WSL.
***Setup
***1. WSL(Windows Subsystem for Linux)
	Install WSL, and use the ubuntu shell available from following 
	the steps available at: https://ubuntu.com/wsl
*** 2. Manual testing
Run using Manual local testing in Ubuntu wsl.
*** 3. Automatic testing
   Update apt repositories and install dos2unix:
   ```
   sudo apt-get update
   sudo apt-get install dos2unix
   ```
   
   Enable running the bash script on windows.
   ```
   dos2unix run.sh
   ```

   You can now run ./run.sh with similar steps to linux users, but
   in WSL.

** Mac Users

   MacOS requires different system calls from linux and windows.
   Therefore, use the server in mac_os_server along with mac_run.sh
    to run the client.
*** Automatic deployment:
****1. Install homebrew via: https://brew.sh/
****2. Install tmux via homebrew
   ```
   brew install tmux
   ```
****3. Automatic deployment
   In the project root, run:
   ```
   ./mac_run.sh
   ```
